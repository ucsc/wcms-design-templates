@use "sass:math";

// # Custom functions and mixins

// Shows breakpoint debugging information on rendered pages.
// @include breakpoints` on the body tag to use this.
@mixin breakpoints() {
    
  @include media($mobile) {
    @include display-text("Mobile", green);
  }
  @include media($tablet) {
    @include display-text("Tablet: Portrait", orange);
  }
  @include media($desktop) {
    @include display-text("Desktop", blue);
  }  
}


// ## Debugging: `display-text`
//
// Display text before an element.
// Primarily used for showing which media queries are active.
@mixin display-text($text, $bgcolor) {
  &:before {
    content: $text;
    display:block;
    width: 100%;
    padding:0.5em 1em;
    text-align:center;
    background-color:$bgcolor;
    color:white;
    position: relative;
    left: -14px;
  }    
}

// ## Debugging: `rowborders`
//
// Show borders around `.row` elements.
@mixin rowborders($color:#80C108) {  
  border: 2px solid $color;
}


@mixin reset($element:div) {
  
    border:none;
    margin:0;
    padding:0;
  
  @if $element == list {  
    list-style: none;
    li {
      margin:0;
      padding:0;
    }
  }  
}



// ## Calculate rems from pixels
// 
// Function and mixin to return rem units from px.
@function calculateRem($size) {
  $remSize: math.div($size, 16);
  @return #{$remSize}rem;
}

@mixin fontSize($size) {
  font-size: calculateRem($size);
}

// # Box Shadow
// Add box-shadow to modules.
@mixin module-box-shadow($bgcolor:light) {
  @if $bgcolor == light {
    border-bottom: solid 1px lighten($gray-light, 20%);
    box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.05);    
  } @else if $bgcolor == dark {
    border-bottom: solid 1px lighten($gray-light, 10%);
    box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.1);  
  }
  border-radius:$border-radius-base;
}

// # Hover, active, focus
// Set hover, active, and focus for elements.
@mixin hoverActiveFocus($color: $brand-tertiary-blue, $decorate: true) {
    &:hover, &:active, &:focus {
        color: $color;
        @if $decorate == true {
          text-decoration: underline;
          text-decoration-color: $gold;
          text-decoration-skip-ink: auto;
          text-decoration-thickness: .1em;
          text-underline-offset: .1em;
          text-decoration-skip-ink: auto;
        }
    }
}

@mixin navigation-list {
    list-style-type:none;
    width:100%;
    margin:0;
    padding:0;
    > li {  
        width:auto;
        -webkit-flex: 1;
        flex:1;
        a {     
          padding: 2em 2em;
        }
    }
}

@mixin mobile-button($inverted: false) {
  display: block;
  //border-radius: $border-radius-base;
  padding: 0.4em 1em;
  text-align: right;
  text-decoration: none;
  font-size: $font-size-small;
  color: $ucsc-gold;
  background-color: $sand-light;
  &:hover,
  &:active,
  &:focus {
    color:$gold;
    background-color: $blue;
    text-decoration: none;
  }
}

// # Toggle function for mobile menus
// Collapse global and site menus on mobile screens.
@mixin toggle-menu() {
  transition: all 1s ease-in-out;
  overflow: hidden;
  max-height:0;  
  // Active mobile menu removes min-height of 0.
  &.active {
    max-height:auto;
    max-height:none;
  }
  @include media($tablet) {
    max-height:auto;
    max-height:none;
  }
}

@mixin meta-small($scale) {
  text-transform: uppercase;
  font-size: modular-scale($scale);
  line-height: modular-scale(1);
}

@mixin image-display($bgcolor, $padding, $radius:false) {
    img {
      width: 100%;
      height: auto;
      background-color: $bgcolor;
      padding: $padding;
      @if $radius {
        border-radius: $border-radius-base;
      }
    }
}


@mixin rowMachine($numPerRow, $margin) {
  width: (100% - (($numPerRow - 1) * $margin)) / $numPerRow;
  &:nth-child(n) {
    margin-bottom: $margin;
    margin-right: $margin;
  }

  &:nth-child(#{$numPerRow}n) {
    margin-bottom: 0;
    margin-right: 0;
  }
}